// Lan Sheng  Copyright (c) 2022 https://127.0.0.1.// Copyright (c) 2022. easyvideo, personal projects are not allowed to be commercialized without permission.// Please keep the information of the original author of the code. Thank youpackage top.easyvideo.service_sms.utils;import com.tencentcloudapi.common.Credential;import com.tencentcloudapi.common.exception.TencentCloudSDKException;import com.tencentcloudapi.common.profile.ClientProfile;import com.tencentcloudapi.common.profile.HttpProfile;import com.tencentcloudapi.sms.v20210111.SmsClient;import com.tencentcloudapi.sms.v20210111.models.SendSmsRequest;import com.tencentcloudapi.sms.v20210111.models.SendSmsResponse;import lombok.extern.slf4j.Slf4j;import top.easyvideo.service_sms.constant.TencentAccessConstant;/** * @program: easyvideo_video * @ClassName: TencentSmsUtils * @create: 2022/3/9:20:48 * @author: Lan Sheng * @desc: | **/@Slf4jpublic class TencentSmsUtils {    /**     * 腾讯云短信发送     *     * @param code   验证码 (4)     * @param phones 手机号 批量     */    public static boolean sendTencentSms(String code, String... phones) {        try {            // 实例化一个认证对象，入参需要传入腾讯云账户secretId，secretKey,此处还需注意密钥对的保密            // 密钥可前往https://console.cloud.tencent.com/cam/capi网站进行获取            Credential cred = new Credential(TencentAccessConstant.ACCESS_KEY_ID, TencentAccessConstant.ACCESS_KEY_SECRET);            // 实例化一个http选项，可选的，没有特殊需求可以跳过            HttpProfile httpProfile = new HttpProfile();            httpProfile.setEndpoint("sms.tencentcloudapi.com");            // 实例化一个client选项，可选的，没有特殊需求可以跳过            ClientProfile clientProfile = new ClientProfile();            clientProfile.setHttpProfile(httpProfile);            // 实例化要请求产品的client对象,clientProfile是可选的            SmsClient client = new SmsClient(cred, "ap-guangzhou", clientProfile);            // 实例化一个请求对象,每个接口都会对应一个request对象            SendSmsRequest req = new SendSmsRequest();            // 电话号码            req.setPhoneNumberSet(phones);            req.setSmsSdkAppId(TencentAccessConstant.SMS_SDK_APP_ID);            req.setSignName(TencentAccessConstant.SIGN_NAME);            req.setTemplateId(TencentAccessConstant.TEMPLATE_ID);            String[] templateParamSet1 = {code};            req.setTemplateParamSet(templateParamSet1);            // 返回的resp是一个SendSmsResponse的实例，与请求对象对应            SendSmsResponse resp = client.SendSms(req);            // 输出json格式的字符串回包            String toJsonString = SendSmsResponse.toJsonString(resp);            if (toJsonString.contains("Code") && toJsonString.contains("Ok") && toJsonString.contains("send success")) {                log.info("短信发送成功： {}", toJsonString);                return true;            }            System.out.println(SendSmsResponse.toJsonString(resp));        } catch (TencentCloudSDKException e) {            log.info("短信发送失败： {}", e.toString());        }        return false;    }}